/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistasClientes;

import Clases.Contactos;
import Clases.Directorio_Telefónico;
import Vistas.VentanaPrincipal;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Bossa
 */
public class BorrarTelefonosPorDNI extends javax.swing.JInternalFrame {

    /**
     * Creates new form BorrarClientes
     */
    ArrayList<Contactos> listaContactos = new ArrayList();
    DefaultTableModel modelo = new DefaultTableModel();

    public void rellenarDNIs(Directorio_Telefónico agenda) {
        listaContactos.clear();
        TreeMap<Long, Contactos> directorioTemporal = new TreeMap<>();
        directorioTemporal = agenda.getAgenda();
        for (Map.Entry<Long, Contactos> objeto : directorioTemporal.entrySet()) {
            listaContactos.add(objeto.getValue());
        }
        Collections.sort(listaContactos, (c1, c2) -> Integer.compare(c1.getDni(), c2.getDni()));
        DefaultListModel modelo = new DefaultListModel();
        for (Contactos c : listaContactos) {
            if (modelo.contains(String.valueOf(c.getDni()))) {
                continue;
            }
            modelo.addElement(String.valueOf(c.getDni()));
        }
        jlDNIs.setModel(modelo);
    }

    public BorrarTelefonosPorDNI() {
        initComponents();
        VentanaPrincipal.armarCabeceraDeContactosTablas(tblBorrarCliente);
        rellenarDNIs(VentanaPrincipal.directorio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDniCliente = new javax.swing.JLabel();
        txtDniCliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrarCliente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBorrarCliente = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlDNIs = new javax.swing.JList<>();

        lblDniCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDniCliente.setText("DNI");

        txtDniCliente.setEditable(false);

        tblBorrarCliente.setAutoCreateRowSorter(true);
        tblBorrarCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblBorrarCliente);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Borrar Cliente");

        btnBorrarCliente.setText("Borrar Cliente");
        btnBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarClienteActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jlDNIs.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlDNIsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jlDNIs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(txtDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBorrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)
                        .addComponent(btnSalir)
                        .addContainerGap(37, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBorrarCliente)
                    .addComponent(btnSalir))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarClienteActionPerformed
        int[] filaS = tblBorrarCliente.getSelectedRows();
        modelo = (DefaultTableModel) tblBorrarCliente.getModel();
        if (filaS.length > 0) {
            for (int i = filaS.length - 1; i >= 0; i--) {
                Long telefonoTabla = (Long) tblBorrarCliente.getValueAt(filaS[i], 5);
                VentanaPrincipal.directorio.borrarContacto(telefonoTabla);
                modelo.removeRow(filaS[i]);
            }
        }
        txtDniCliente.setText("");
        rellenarDNIs(VentanaPrincipal.directorio);

    }//GEN-LAST:event_btnBorrarClienteActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jlDNIsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlDNIsValueChanged
        if (!evt.getValueIsAdjusting() && jlDNIs.getSelectedValue() != null) {
            try {
                String dni = jlDNIs.getSelectedValue();
                txtDniCliente.setText(dni);
                int dniParseado = Integer.parseInt(dni);
                modelo = (DefaultTableModel) tblBorrarCliente.getModel();
                modelo.setRowCount(0);
                for (Map.Entry<Long, Contactos> c : VentanaPrincipal.directorio.getAgenda().entrySet()) {
                    Contactos contacto = c.getValue();
                    Long telefono = c.getKey();
                    if (contacto.getDni() == dniParseado) {
                        modelo.addRow(new Object[]{contacto.getDni(), contacto.getNombre(),
                            contacto.getApellido(), contacto.getCiudad(), contacto.getDireccion(), telefono});
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "No hay contactos agendados.");
                e.printStackTrace();
                this.dispose();
            } catch (Exception a) {
                a.printStackTrace();
            }
        }

    }//GEN-LAST:event_jlDNIsValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarCliente;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> jlDNIs;
    private javax.swing.JLabel lblDniCliente;
    private javax.swing.JTable tblBorrarCliente;
    private javax.swing.JTextField txtDniCliente;
    // End of variables declaration//GEN-END:variables
}
