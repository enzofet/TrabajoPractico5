/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistasClientes;

import Clases.Contactos;
import Vistas.VentanaPrincipal;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Bossa
 */
public class BorrarClientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form BorrarClientes
     */
    private void cargarDNIEnLista() {
        DefaultListModel<String> modelo = new DefaultListModel<>();
        for (Contactos c : VentanaPrincipal.directorio.getAgenda().values()) {
            String dniStr = String.valueOf(c.getDni());
            if (!modelo.contains(dniStr)) {
                modelo.addElement(dniStr);
            }
        }
        ListaContactos.setModel(modelo);
    }

    private void cargarClienteEnTabla(int dni) {
        DefaultTableModel modelo = (DefaultTableModel) tblBorrarCliente.getModel();
        modelo.setRowCount(0);

        for (Map.Entry<Long, Contactos> entry : VentanaPrincipal.directorio.getAgenda().entrySet()) {
            Contactos contacto = entry.getValue();
            Long telefono = entry.getKey();

            if (contacto.getDni() == dni) {
                modelo.addRow(new Object[]{
                    contacto.getDni(),
                    contacto.getApellido(),
                    contacto.getNombre(),
                    contacto.getDireccion(),
                    contacto.getCiudad(),
                    telefono
                });
            }
        }
    }

    private void eliminarClienteCompleto(int dni) {
        ArrayList<Long> telefonosAEliminar = new ArrayList<>();

        for (Map.Entry<Long, Contactos> entry : VentanaPrincipal.directorio.getAgenda().entrySet()) {
            if (entry.getValue().getDni() == dni) {
                telefonosAEliminar.add(entry.getKey());
            }
        }

        if (!telefonosAEliminar.isEmpty()) {
            for (Long tel : telefonosAEliminar) {
                VentanaPrincipal.directorio.getAgenda().remove(tel);
            }

            ((DefaultTableModel) tblBorrarCliente.getModel()).setRowCount(0);
            cargarDNIEnLista();
            txtDniCliente.setText("");
            JOptionPane.showMessageDialog(this, "Cliente eliminado.");
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró cliente.");
        }
    }

    public BorrarClientes() {
        initComponents();
        cargarDNIEnLista();

        ListaContactos.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                String dniStr = ListaContactos.getSelectedValue();
                if (dniStr != null) {
                    int dniSeleccionado = Integer.parseInt(dniStr);
                    txtDniCliente.setText(dniStr);
                    cargarClienteEnTabla(dniSeleccionado);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDniCliente = new javax.swing.JLabel();
        txtDniCliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrarCliente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBorrarCliente = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaContactos = new javax.swing.JList<>();

        lblDniCliente.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDniCliente.setText("DNI:");

        txtDniCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniClienteActionPerformed(evt);
            }
        });

        tblBorrarCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DNI", "Apellido", "Nombre", "Dirección", "Ciudad", "Teléfono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBorrarCliente.setName("Lista Clientes"); // NOI18N
        jScrollPane1.setViewportView(tblBorrarCliente);

        jLabel1.setFont(new java.awt.Font("URW Gothic", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Borrar Cliente");

        btnBorrarCliente.setText("Borrar Cliente");
        btnBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarClienteActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        ListaContactos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaContactosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(ListaContactos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBorrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(btnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblDniCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtDniCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDniCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDniCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrarCliente)
                    .addComponent(btnSalir))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDniClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniClienteActionPerformed

    private void btnBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarClienteActionPerformed
        String dniTexto = txtDniCliente.getText().trim();
        if (!dniTexto.isEmpty()) {
            try {
                int dni = Integer.parseInt(dniTexto);
                eliminarClienteCompleto(dni);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "El DNI debe ser un número válido.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "DNI no valido");
        }
    }//GEN-LAST:event_btnBorrarClienteActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void ListaContactosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaContactosValueChanged

    }//GEN-LAST:event_ListaContactosValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListaContactos;
    private javax.swing.JButton btnBorrarCliente;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDniCliente;
    private javax.swing.JTable tblBorrarCliente;
    private javax.swing.JTextField txtDniCliente;
    // End of variables declaration//GEN-END:variables
}
