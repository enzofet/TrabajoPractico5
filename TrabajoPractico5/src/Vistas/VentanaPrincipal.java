/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.Directorio_Telefónico;
import VistasCiudades.AgregarCiudad;
import VistasClientes.AgregarClientes;
import VistasClientes.BorrarCliente;
import VistasClientes.frmBuscar;
import VistasDirectorio.BuscarCliente_Ciudad;
import VistasDirectorio.frm_BuscarTelefonoPorApellido;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author Enzo_2
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public static Directorio_Telefónico directorio = new Directorio_Telefónico();
    private AgregarClientes vistaClienteAgregar;

    /*
    Creo metodo para utilizar reasignar las ciudades a un modelo de box y lo reasigno
    a un Array para ordenarlo alfabeticamente y posteriormente añadir los elementos al 
    modelo de caja para asignarlo al modelo de la caja pasada por parametro.
    Es reutilizable ya que lo hice static con VentanaPrincipal.nombremetodo.
    firma enzito piola
    */
    public static void rellenoOrdenAlfabeticoComboBox(JComboBox box) {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        ArrayList<String> ciudades = new ArrayList<>();
        for (int i = 0; i < box.getItemCount(); i++) {
            ciudades.add((String) box.getItemAt(i));
        }
        Collections.sort(ciudades);
        for (String ciudad : ciudades) {
            model.addElement(ciudad);
        }
        box.setModel(model);
    }
    
    /*
    Inicia la ventana de agregarClientes para usar de referencia las ciudades 
    por defecto que contiene.
    */
    
    public VentanaPrincipal() {
        vistaClienteAgregar = new AgregarClientes();
        rellenoOrdenAlfabeticoComboBox(vistaClienteAgregar.getJcbCiudad());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        escritorio = new javax.swing.JDesktopPane();
        barraMenu = new javax.swing.JMenuBar();
        clientesMenu = new javax.swing.JMenu();
        agregarCliente = new javax.swing.JMenuItem();
        buscarCliente = new javax.swing.JMenuItem();
        borrarCliente = new javax.swing.JMenuItem();
        directorioMenu = new javax.swing.JMenu();
        buscarClientePorCiudad = new javax.swing.JMenuItem();
        buscarTelPorApellido = new javax.swing.JMenuItem();
        ciudadesMenu = new javax.swing.JMenu();
        agregarCiudad = new javax.swing.JMenuItem();
        salirMenu = new javax.swing.JMenu();
        btnSalir = new javax.swing.JMenuItem();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );

        clientesMenu.setText("Clientes");

        agregarCliente.setText("Agregar Cliente");
        agregarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarClienteActionPerformed(evt);
            }
        });
        clientesMenu.add(agregarCliente);

        buscarCliente.setText("Buscar Cliente");
        buscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClienteActionPerformed(evt);
            }
        });
        clientesMenu.add(buscarCliente);

        borrarCliente.setText("Borrar Cliente");
        borrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarClienteActionPerformed(evt);
            }
        });
        clientesMenu.add(borrarCliente);

        barraMenu.add(clientesMenu);

        directorioMenu.setText("Directorio");

        buscarClientePorCiudad.setText("Buscar Clientes por Ciudad");
        buscarClientePorCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarClientePorCiudadActionPerformed(evt);
            }
        });
        directorioMenu.add(buscarClientePorCiudad);

        buscarTelPorApellido.setText("Buscar Teléfono por Apellido");
        buscarTelPorApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarTelPorApellidoActionPerformed(evt);
            }
        });
        directorioMenu.add(buscarTelPorApellido);

        barraMenu.add(directorioMenu);

        ciudadesMenu.setText("Ciudades");

        agregarCiudad.setText("Agregar Ciudad");
        agregarCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCiudadActionPerformed(evt);
            }
        });
        ciudadesMenu.add(agregarCiudad);

        barraMenu.add(ciudadesMenu);

        salirMenu.setText("Salir");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        salirMenu.add(btnSalir);

        barraMenu.add(salirMenu);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void agregarCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCiudadActionPerformed
        vistaClienteAgregar.setVisible(false);
        escritorio.removeAll();
        escritorio.repaint();
        AgregarCiudad vistaAgregarCiudad = new AgregarCiudad(vistaClienteAgregar);
        vistaAgregarCiudad.setVisible(true);
        escritorio.add(vistaAgregarCiudad);
        escritorio.moveToFront(vistaAgregarCiudad);
    }//GEN-LAST:event_agregarCiudadActionPerformed

    private void agregarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarClienteActionPerformed
        escritorio.removeAll();
        escritorio.repaint();
        vistaClienteAgregar.setVisible(true);
        escritorio.add(vistaClienteAgregar);
        escritorio.moveToFront(vistaClienteAgregar);
    }//GEN-LAST:event_agregarClienteActionPerformed

    private void borrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarClienteActionPerformed
        escritorio.removeAll();
        escritorio.repaint();
        BorrarCliente bc = new BorrarCliente();
        bc.setVisible(true);
        escritorio.add(bc);
        escritorio.moveToFront(bc);
    }//GEN-LAST:event_borrarClienteActionPerformed

    private void buscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClienteActionPerformed
        escritorio.removeAll();
        escritorio.repaint();
        frmBuscar vistaClienteBuscar = new frmBuscar();
        vistaClienteBuscar.setVisible(true);
        escritorio.add(vistaClienteBuscar);
        escritorio.moveToFront(vistaClienteBuscar);
    }//GEN-LAST:event_buscarClienteActionPerformed

    private void buscarTelPorApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarTelPorApellidoActionPerformed
        vistaClienteAgregar.setVisible(false);
        vistaClienteAgregar.dispose();
        escritorio.repaint();
        frm_BuscarTelefonoPorApellido vistaClienteBuscarApellido = new frm_BuscarTelefonoPorApellido();
        vistaClienteBuscarApellido.setVisible(true);
        escritorio.add(vistaClienteBuscarApellido);
        escritorio.moveToFront(vistaClienteBuscarApellido);
    }//GEN-LAST:event_buscarTelPorApellidoActionPerformed

    private void buscarClientePorCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarClientePorCiudadActionPerformed
        /**Ejecuto el metodo estatico para rellenar dinamicamente y por si no agrega 
         * ninguna ciudad**/
        VentanaPrincipal.rellenoOrdenAlfabeticoComboBox(vistaClienteAgregar.getJcbCiudad());
        escritorio.removeAll();
        escritorio.repaint();
        BuscarCliente_Ciudad vistaClienteBuscarCiudad = new BuscarCliente_Ciudad(vistaClienteAgregar);
        vistaClienteBuscarCiudad.setVisible(true);
        escritorio.add(vistaClienteBuscarCiudad);
        escritorio.moveToFront(vistaClienteBuscarCiudad);
    }//GEN-LAST:event_buscarClientePorCiudadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem agregarCiudad;
    private javax.swing.JMenuItem agregarCliente;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenuItem borrarCliente;
    private javax.swing.JMenuItem btnSalir;
    private javax.swing.JMenuItem buscarCliente;
    private javax.swing.JMenuItem buscarClientePorCiudad;
    private javax.swing.JMenuItem buscarTelPorApellido;
    private javax.swing.JMenu ciudadesMenu;
    private javax.swing.JMenu clientesMenu;
    private javax.swing.JMenu directorioMenu;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JMenu salirMenu;
    // End of variables declaration//GEN-END:variables
}
